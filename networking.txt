What protocol layer is SSL?
Trick question, it's not a protocol, it's just two application-level decorator functions for the TCP socket API. (Sending host pushes data into SSL's socket-like API. SSL encrypts and pushes into TCP socket API. Receiving host receives data from TCP socket, passes to SSL socket-like API, decrypts, passes to application.)

---

path: networking-cryptography
front: At each node along a path, a packet suffers delays. What are the 4 most important kind of delays?
back: Nodal processing - examine headers, decide where to send it Queueing - before transmitting on to a link Transmission - link transmission rate/packet size Propagation - propagation speed of the link
studied: [13513663, 13637358, 13637899, 135135135]

---

path: networking-cryptography
front: Best defense against attackers masquerading as someone a host trusts?
back: End-point authentication, which allows us to say with certainty who is sending us packets.
studied: [13513663, 13637358, 13637899m]

---

path: networking-cryptography
front: Best defense against packet sniffing?
back: Cryptography
studied: [13513663, 13637358]

---

path: networking-routing
front: How does a router map destination addresses (or portions thereof) to its outgoing links?
back: With a forwarding table.
studied: [13513663, 13637358]

---

path: networking-routing
front: Three types of DoS attacks?
back: Vulnerability attack - send the right messages to a vulnerable app, make the app or the host crash Bandwidth flooding - send tons of packets, legit packets are dropped Connection flooding - bog them down with bogus TCP connections, host stops accepting legit connections.
studied: [13513663, 13637358, 13637899m]

---

Virus vs worm?
Virus requires user interaction to infect the device, worms don't. (user might be running vulnerable application in which attacker can just send malware)

---

What are some features that TCP implements that UDP does not?
Congestion control, flow control, reliable data transfer

---

What are the benefits of radio channels carrying signals in the electromagnetic spectrum?
They can penetrate walls and potentially travel long distances

---

What are the terms for the relationship between an access ISP and a global transit ISP?
A customer and a provider. Customer pays provider based on traffic exchanged with provider.

---

What do Bluetooth, WiFi, and cellular networks have in common?
They all rely on radio waves (of various wavelengths)

---

What is ISP peering?
ISPs pay their upstream providers based on traffic. To save costs, they sometimes join their networks together directly. IXPs (Internet Exchange Points) are meeting points where multiple ISPs can peer.

---

What is a queueing delay?
Most packet switches use store-and-forward transmission at their inbound links, necessitating temporary storage of packets. Queueing delay occurs when an outgoing link is already busy transmitting other packets in an outgoing link queue.

---

What is an upper-tier ISP?
ISPs that provide access to end systems must also be interconnected. Examples: Level 3 Communications, AT&amp;T, Sprint

---

What is the first packet switch in a wireless LAN called?
Access Point

---

What is the formula for traffic intensity?
La/R L = size of each packet in bits a = average packets/sec R = transmission rate, bits/sec Keep traffic intensity &lt; 1.

---

When can propagation delay be a factor?
It can be 100s of milliseconds for two routers connected by geostationary satellite link. For routers in the same access network it'll be negligible - a couple microseconds.

---

When might transmission delay be a factor?
When broadcasting a large packet over a low transmission rate link it could be in the 100s of milliseconds. Typically negligible for transmission rates of 10+ Mbps.

---

When might transmission delay be a factor?
When broadcasting a large packet over a low transmission rate link it could be in the 100s of milliseconds. Typically negligible for transmission rates of 10+ Mbps.

---

Why is processing delay important?
It's negligible for an individual packet, but strongly influences a routers max throughput.

---

What is the core tradeoff in a distributed hash table?
The number of neighbors a peer has to track
The number of messages a peer must send to resolve a query ("Who is responsible for hashed key 13?")

---

What happens when a peer in a distributed hash table can't answer a query?
It hashes the question and asks a neighbor (a nearby peer) that might know the answer.

---

What is a BitTorrent tracker?
A distributed hash table of currently living peers.

---

How does the transport layer check for errors?
Sending host: checksum the packet, put in checksum header field
Receiving host: checksum the packet, add it to sending checksum, does it equal 11111111?

---

What are the well-known port numbers?
0 to 1023.
HTTP: 80
HTTPS: 443
SSH: 22

---

What's the relationship between ports and sockets?
TCP receives messages at a port, a demultiplexes them to a socket based on the 4-tuple (src-ip, src-port, dest-ip, dest-port)

---

How are UDP and TCP demultiplexing different?
TCP demultiplexing is complex - there can be many TCP sockets for a port. Identifiable by 4 tuple.
UDP demultiplexing is simpler - there's only ever one UDP socket for a port. Identifiable by (dest ip, dest port)

---

How does TCP determine a timeout interval?
A weighted moving average of estimated round-trip times between packet transmission and ACK, plus some multiple of the EstRTTs variance (like 4).

---

How many ports are there?
It's a 16 bit number, so 65,535 (0 counts).

---

Why does TCP set initial sequence numbers randomly during the 3-way handshake?
To reduce the probability that incorrect data is ACK'd - there could be stray packets still in the network from a previous, ended TCP connection between those two hosts and ports.

---

What's the difference between flow control and congestion control?
Flow control: don't let sender overwhelm receiver (receiving application is slow reading data from the receiving buffer)
Congestion control: don't let sender overwhelm network

---

What problem does the Go-Back-N protocol solve?
Identifying missing data. Go-Back-N implementers ACK the last in-order received byte, even if they've received later bytes, out-of-order.
(Most TCP implementers ACK missing segments selectively, as it requires less network traffic)

---

Flow control: what does the sender need to know from the client to make overflowing the receiving buffer impossible?
The receiving buffer's free space - the amount of unacknowledged data in the network (LastByteSent - LastByteAcked)

---

What is included in a SYN packet?
Client's random initial sequence number
SYN bit = 1

---

What happens when a TCP server receives a SYN packet?
1. Allocates a buffer and a port for the connection
2. Set the acknowledgment field to client's initial sequence number + 1
3. Chooses its own ISN

---

How does the client respond to a SYNACK packet?
1. Allocates a buffer and port for the connection
2. Sets the acknowledgment field to the server's initial sequence number + 1
2. Optionally sends data.

---

What are the 6 flag bits in a TCP packet's header?
SYN
RST
FIN
ACK (acknowledgment number field is valid)
URG (urgent, not used)
PSH (pass to application layer now, not used)

---

What is the conditional GET?
A request that might return 304 Not Modified.
Caching could be implemented using:
Date modified (Resp: Last-Modified, Req: If-Modified-Since)
ETags (Req: If-None-Match, Resp: ETag)
Cache-Control (Req+Res: "Cache-Control: max-age=120").

---

