Squash a few commits from the last 10 commits;;;git rebase -i HEAD~10
Discard local changes in a specific file;;;git checkout HEAD file.txt
You're reading commits. You notice you have duplicated someone else's work. Solution?;;reset --soft, on top of their remote branch.;
Git is meant to track ____, not ____.;;changes, history;
Show remotes (am I connected to Heroku?);;;git remote show
To re-add a deleted commit?;;;git reflog
Remove untracked files from working tree?;;;git clean --dry-run<br>git clean -fd # (force, directories)
Get list of files change by commit? Aggregated together?;;;git lg --stat HEAD~2..HEAD<br>git diff --stat HEAD~2
List recent commits to a file?;;;git log --follow file.txt
reset vs checkout?;;reset: move branch pointer to commit, change working tree + index.<br>checkout: move HEAD pointer to commit (unless filename passed), change working tree only.;
Working tree, index, "staged", repository?;;Working tree: files.<br>index: changes ready to be committed.<br>staged: changes in the index.<br>repository: history of commits.;
reset --soft;;Move branch pointer, but leave working tree/index unchanged. Changes preserved, allows you to rewrite commits on top of another branch.;
reset --hard;;Move branch pointer, reset index and working tree. Changes discarded.;
