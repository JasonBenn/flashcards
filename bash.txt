Return value of bash commands?;;echo $?<br>0 (truthy) or any other number (error status code);
Unix process model: 3 inputs;;ARGV [strg]<br>STDIN <Rstr> (like a cable)<br>ENV { } (string keys string values);
Unix process model: 3 outputs;;STDOUT <Wstr><br>STDERR <Wstr><br>EXIT CODE;
STDOUT vs STDERR: differences?;;STDOUT is a stream designed for another program (like an API)<br>STDERR is a stream designed for any IO device;
curl: -i?;;i = include the header in the output;
curl -v?;;verbose. Good for debugging. Things are tagged with *, >, or <;
Refactor:<br>cat text | some-command arg1 arg2;;some-command arg1 arg2 < text;
Use Mac's spotlight to search the system;;mdfind;
Go to file in Finder;;cmd-shift-g;
Pass file f into program's STDIN;;program < f;
Program that numerically sorts;;sort -n (for numeric);
sed -e: syntax?;;command/thing to find/thing to replace/flags<br>useful command: s (substitute);
Remove consecutive identical lines, or show only duplicated lines;;uniq<br>-d shows only the duplicated lines;
Kill several processes simultaneously;;kill -9 pid pid pid;
Test to see if a site is up;;ping;
Test to see if port 9001 is open;;lsof -i :9001<br>(list open files, matching address specified by i, port number counts as one address);
Download a file to current directory (possibly, a raw Git file);;curl -O <url>;
Show the contents of a gem in your Gemfile;;bundle open ${gem};
Use a DNS lookup to find the IP address associated with a domain name.;;dig www.google.com<br>(if you're a pansy you can use nslookup or host);
What is a reverse DNS lookup, and how would you do one?;;"<br>""What is the domain name associated with this IP address?""<br>Sometimes IP addresses don't have a domain name - you'd be able to access them only if you knew their IP address.<br>Can get some info with WHOIS.<br>";
What is WHOIS?;;A protocol for asking about ICANN registration information for an IP, domain, or autonomous system. Might include contact info, domain names, abuse info.;
What is the difference between:<br>drwx------<br>lrwx------<br>-rwx------;;the first is a directory<br>the second is a symbolic link<br>the third is a flat file.;
Which files are changed?<br>chmod 600 ~/symlink<br>chmod -h 600 ~/symlink<br>chmod -R 600 ~/<br>chmod 600 ~/*;;1. the symlink target<br>2. the symlink itself<br>3. everything in ~/ except the symlink<br>4. the symlink target<br>chmod changes the target file for every symlink listed<br>chmod ignores symlinks during recursive directory travel<br>chmod -h changes the link itself.;
Become superuser, keep your configuration files.;;sudo -s;
How do you redirect STDERR to STDOUT?;;2>&1;
2>1 vs 2>&1?;;2>1 redirects stderr in a file named 1<br>2>&1 redirects stderr to stdout<br>& in the context of redirects means file descriptors. So &1 is stdout.;
How do you redirect both STDERR and STDOUT to a file?;;(echo stdout SEMICOLON echo stderr 1>&2) &> file<br>OR:<br>tail > file 2&>1;
grep vs egrep vs zegrep?;;grep: basic regex<br>egrep: extended regex<br>zegrep: egrep for files compressed with compress or gzip;
Access a background process?;;To inspect jobs managed by the current shell:<br>jobs<br>fg 1;
Print the 4th column of some output;;awk '{print $4}'<br>Single quotes prevent Bash expansion. {$4} is just ancient awk syntax.;
ps without flags?;;All of your processes that have controlling terminals.;
Search file for occurences of `{` in file txt;;egrep '{' txt<br>single quotes ensure that char is not evaluated by the shell, but instead by egrep.;
egrep: context options?;;-ABC<br>after-context, before-context, context;
egrep: Exclude pattern?;;-v (or --invert-match);
egrep: print line numbers?;;-n (or --line-number);
egrep: only search files matching X pattern?;;--include 'X'<br>Patterns are matched to full file path, not just filename component.<br>If a file matches include and exclude, exclude takes priority.;
egrep: only search directories matching filename pattern X?;;--include-dir 'X'<br>--exclude-dir patterns take priority;
awk: specify delimiting char?;;-F ':'<br>^ is a regex;
less: search for a pattern?;;/pattern<br>navigate from match to match:<br>n (forwards)<br>N (backwards);
Less: jump to line #150? Open file at a line number?;;150g<br>less -N +150g today.log;
Less: jump to 90% through the file? Open file at 90%?;;90p<br>less +90p today.log;
ps: u?;;Display usernames;
ps: x?;;Display processes without controlling terminals (things launched by Launchpad, for example);
ps: w?;;wide (it just wraps);
ps: j?;;jobs, pids;
Search in manpages for example to find a new command;;apropos<br>search for keyword without restricting output to terminal width<br>apropos -l {regular_expression};
Cut fields or characters from STDIN;;cut;
gives an overview of the file system disk space usage;;df<br>display all file systems and their disk usage in human readable form<br>df -h;
Compare files and directories;;diff<br>Compare files<br>diff {file1} {file2}<br>Compare files, ignoring white spaces<br>diff -w {file1} {file2}<br>Compare files, showing differences side by side<br>diff -y {file1} {file2}<br>Compare directories recursively<br>diff -r {directory1} {directory2}<br>Compare directories, only showing the names of files that differ<br>diff -rq {directory1} {directory2};
Finds duplicate files in a given set of directories;;fdupes;
Find files under the given directory tree, recursively;;find<br>find files by extension<br>find {root_path} -name {'*.py'}<br>find files using case insensitive name matching, of a certain size<br>find {root_path} -size +500k -size -10MB -iname {'*.TaR.gZ'}<br>find files modified since a certain time<br>find {root_path} -name {'*.py'} -mtime {-1d};
List open files and corresponding processes;;lsof<br>find the process that opened a local internet port<br>lsof -i :{8080};
Combined traceroute and ping tool;;mtr<br>Traceroute to a host and continuously ping all intermediary hops<br>mtr {host}<br>Disable IP address and host name mapping<br>mtr -n {host}<br>Generate output after pinging each hop 10 times<br>mtr -w {host}<br>Force IP IPv4 or IPV6<br>mtr -4 {host};
Backup mysql database;;mysqldump {database_name} > {filename.sql};
Network exploration tool and security / port scanner;;nmap<br>scan open ports of a single host<br>nmap {192.168.0.1}<br>discover hosts in the 192.168.0.X area (no port scan)<br>nmap -sn {ip address};
Copies files between hosts on a network Works over a secure connection (SSH);;scp;
Run replacements based on regular expressions;;sed<br>replace all occurrences of a string in a file, and print the result<br>sed 's/{find}/{replace}/g' {filename};
connect to a specified port of a host;;telnet {ip_address} {port};
Change a file access and modification times (atime, mtime);;touch<br>Set the times on a file to those specified<br>touch -t 201412250801.59 {filename} touch -t {YYYYMMDDHHMM.SS} {filename}<br>Set the times on a file to match those on second file<br>touch -r {filename2} {filename};
A running process can keep a deleted file open. Which disk measuring utility will see actual usage?;;df!<br>du will no longer see a reference to the file in the dir tree.<br>df = reads the superblock, trusts it<br>du = reads each object, sums;
Show or set the system's host name;;Show current host name<br>hostname<br>Set current host name<br>hostname {new_hostname};
Place standard output in the clipboard;;pbcopy;
Send the contents of the clipboard to standard output;;pbpaste;
Display dynamic real-time information about running processes;;top<br>Get help about interactive commands<br>?;
Grab 5th column, separated by spaces;;trim squeeze<br>cut delimiter fields<br> <code> tr -s ' ' | cut -d ' ' -f 5 </code>;
Execute a long-running process in ssh without worrying about dropped connection terminating process;;Screen. <code> screen<br># run command<br>ctrl-a d # detach<br>screen -ls<br>screen -r {id}<br> </code>;

Loop syntax?;;;for x in seminar{1,2} SEMICOLON do ssh $x 'ls -l' SEMICOLON end

Find out what filesystem files a command touched?;;strace on linux, dtruss on OSX;

Last word on previous line?;;;!$
